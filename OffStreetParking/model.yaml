---
# Copyright (c) 2020 Contributors to Smart-Data-Models
# see https://github.com/smart-data-models/dataModel.Parking

OffStreetParking:
  required:
    - id
    - type
    - location
  allOf:
    - $ref: >-
        https://smart-data-models.github.io/data-models/ngsi-ld.yaml#/Common
  type: object
  description: >-
      A site, off street, intended to park vehicles, managed independently and with suitable and clearly marked access points (entrances and exits). 
      If necessary, and for management purposes or to deal with multi-location parking sites, 
      it can be divided into different zones modelled by the entity type ParkingGroup .
      In DATEX 2 version 2.3 terminology it corresponds to a UrbanParkingSite of type offStreetParking.
  properties:
    acceptedPaymentMethod:
      x-ngsi:
        type: Property
      type: array
      description: 'Accepted payment method(s).'
      items:
        type: string
        enum:
          - ByBankTransferInAdvance
          - ByInvoice
          - Cash
          - CheckInAdvance
          - COD
          - DirectDebit
          - GoogleCheckout
          - PayPal
          - PaySwarm
    address:
      $ref: >-
        https://smart-data-models.github.io/data-models/schema.org.yaml#/address
    aggregateRating:
      x-ngsi:
        type: Property
      type: object
      description: 'Aggregated rating for this parking site.'
    allowedVehicleType:
      x-ngsi:
        type: Property
      type: array
      description: 'Vehicle type(s) allowed. The first element of this array MUST be the principal vehicle type allowed. Free spot numbers of other allowed vehicle types might be reported under the attribute extraSpotNumber and through specific entities of type ParkingGroup.'
      items:
        type: string
        enum:
          - agriculturalVehicle
          - anyVehicle
          - bicycle
          - bus
          - car
          - caravan
          - carWithCaravan
          - carWithTrailer
          - constructionOrMaintenanceVehicle
          - lorry
          - moped
          - motorcycle
          - motorcycleWithSideCar
          - motorscooter
          - tanker
          - trailer
          - van
    alternateName:
      $ref: >-
        https://smart-data-models.github.io/data-models/schema.org.yaml#/alternateName
    areaServed:
      $ref: >-
        https://smart-data-models.github.io/data-models/schema.org.yaml#/areaServed
    availableSpotNumber:
      x-ngsi:
        type: Property
        model: 'https://schema.org/Integer'
      type: integer
      description: 'The number of spots available (including all vehicle types or reserved spaces, such as those for disabled people, long term parkers and so on). This might be harder to estimate at those parking locations on which spots borders are not clearly marked by lines.'
      format: int32
    averageSpotLength:
      x-ngsi:
        type: Property
      type: number
      description: 'he average length of parking spots.'
    averageSpotWidth:
      x-ngsi:
        type: Property
      type: number
      description: 'The average width of parking spots.'
    category:
      x-ngsi:
        type: Property
      type: array
      description: 'Parking site's category(ies). The purpose of this field is to allow to tag, generally speaking, off street parking entities. Particularities and detailed descriptions should be found under the corresponding specific attributes.'
      items:
        type: string
        enum:
          - barrierAccess
          - feeCharged
          - forCustomers
          - forDisabled
          - forElectricalCharging
          - forEmployees
          - forMembers
          - forResidents
          - forStudents
          - forVisitors
          - free
          - freeAccess
          - gateAccess
          - guarded
          - ground
          - longTerm
          - mediumTerm
          - onlyResidents
          - onlyWithPermit
          - parkingGarage
          - parkingLot
          - private
          - public
          - publicPrivate
          - shortTerm
          - staffed
          - underground
          - urbanDeterrentParking
          - other
    chargeType:
      x-ngsi:
        type: Property
      type: array
      description: 'Type(s) of charge performed by the parking site.'
      items:
        type: string
        enum:
          - additionalIntervalPrice
          - annualPayment
          - firstIntervalPrice
          - flat
          - free
          - minimum
          - maximum
          - monthlyPayment
          - other
          - seasonTicket
          - temporaryPrice
    contactPoint:
      x-ngsi:
        type: Property
      type: object
      description: 'Parking site contact point.'
    dataProvider:
      x-ngsi:
        type: Property
        model: 'https://schema.org/Text'
      type: string
      description: 'Specifies the URL to information about the provider of this information'
    description:
      $ref: >-
        https://smart-data-models.github.io/data-models/ngsi-ld.yaml#/description
    extCategory:
      x-ngsi:
        type: Property
      type: array
      description: ''
      items:
        type: string
    extraSpotNumber:
      x-ngsi:
        type: Property
        model: 'https://schema.org/Integer'
      type: integer
      description: |
           The number of extra spots available, i.e. free. This value must aggregate free spots from all groups mentioned below: 
           A/ Those reserved for special purposes and usually require a permit. Permit details will be found at parking group level (entity of type ParkingGroup).
           B/ Those reserved for other vehicle types different than the principal allowed vehicle type. 
           C/ Any other group of parking spots not subject to the general condition rules conveyed by this entity.
      format: int32
    facilities:
      x-ngsi:
        type: Property
      type: array
      description: 'provided by this parking site.'
      items:
        type: string
        enum:
          - toilet
          - shower
          - informationPoint
          - internetWireless
          - payDesk
          - paymentMachine
          - cashMachine
          - vendingMachine
          - faxMachineOrService
          - copyMachineOrService
          - safeDeposit
          - luggageLocker
          - publicPhone
          - elevator
          - dumpingStation
          - freshWater
          - wasteDisposal
          - refuseBin
          - iceFreeScaffold
          - playground
          - electricChargingStation
          - bikeParking
          - tollTerminal
          - defibrillator
          - firstAidEquipment
          - fireHose
          - fireExtinguisher
          - fireHydrant
    firstAvailableFloor:
      x-ngsi:
        type: Property
        model: 'https://schema.org/Integer'
      type: integer
      description: 'Number of the floor closest to the ground which currently has available parking spots.'
      format: int32
    highestFloor:
      x-ngsi:
        type: Property
        model: 'https://schema.org/Integer'
      type: integer
      description: 'For parking sites with multiple floor levels, highest floor.'
      format: int32
    layout:
      x-ngsi:
        type: Property
      type: array
      description: 'Parking layout. Gives more details to the category attribute.'
      items:
        type: string
        enum:
          - automatedParkingGarage
          - surface
          - multiStorey
          - singleLevel
          - multiLevel
          - openSpace
          - covered
          - nested
          - field
          - rooftop
          - sheds
          - carports
          - garageBoxes
          - other
    location:
      $ref: >-
        https://smart-data-models.github.io/data-models/ngsi-ld.yaml#/location
    lowestFloor:
      x-ngsi:
        type: Property
        model: 'https://schema.org/Integer'
      type: integer
      description: 'For parking sites with multiple floor levels, lowest floor.'
      format: int32
    maximumAllowedHeight:
      x-ngsi:
        type: Property
      type: number
      description: 'Maximum allowed height for vehicles. If there are multiple zones, it will be the minimum height of all the zones.'
    maximumAllowedWidth:
      x-ngsi:
        type: Property
      type: number
      description: 'Maximum allowed width for vehicles. If there are multiple zones, it will be the minimum width of all the zones.'
    maximumParkingDuration:
      x-ngsi:
        type: Property
        model: 'https://schema.org/Text'
      type: string
      description: 'Maximum allowed stay at site, on a general basis, encoded as a ISO8601 duration or with any other string relevant for parking. An empty value or when non present indicates an indefinite duration.'
    measuresPeriod:
      x-ngsi:
        type: Property
      type: number
      description: ''
    measuresPeriodUnit:
      x-ngsi:
        type: Property
        model: 'https://schema.org/Text'
      type: string
      description: 'The measures period unit related to availableSpotNumber and priceRatePerMinute.'
    name:
      $ref: >-
        https://smart-data-models.github.io/data-models/ngsi-ld.yaml#/name
    occupancyDetectionType:
      x-ngsi:
        type: Property
      type: array
      description: 'Occupancy detection method(s).'
      items:
        type: string
        enum:
          - balancing
          - manual
          - modelBased
          - none
          - singleSpaceDetection
    openingHours:
      $ref: >-
        https://smart-data-models.github.io/data-models/schema.org.yaml#/openingHours

    owner:
      $ref: >-
        https://smart-data-models.github.io/data-models/fiware-terms.yaml#/owner
    parkingMode:
      x-ngsi:
        type: Property
      type: array
      description: 'Parking mode(s).'
      items:
        type: string
        enum:
          - perpendicularParking
          - parallelParking
          - echelonParking
    priceCurrency:
      x-ngsi:
        type: Property
        model: 'https://schema.org/Text'
      type: string
      description: ''
    priceRatePerMinute:
      x-ngsi:
        type: Property
      type: number
      description: ''
    provider:
      x-ngsi:
        type: Property
      type: object
      description: ''
    requiredPermit:
      x-ngsi:
        type: Property
      type: array
      description: ''
      items:
        type: string
        enum:
          - employeePermit
          - fairPermit
          - governmentPermit
          - noPermitNeeded
          - residentPermit
          - specificIdentifiedVehiclePermit
          - studentPermit
          - visitorPermit
    reservationType:
      x-ngsi:
        type: Property
      type: array
      description: 'Conditions for reservation.'
      items:
        type: string
        enum:
          - optional
          - mandatory
          - notAvailable
          - partly
    security:
      x-ngsi:
        type: Property
      type: array
      description: 'aspects provided by this parking site.'
      items:
        type: string
        enum:
          - patrolled
          - securityStaff
          - externalSecurity
          - cctv
          - dog
          - guard24hours
          - lighting
          - floodLight
          - fences
          - areaSeperatedFromSurroundings
    source:
      $ref: >-
        https://smart-data-models.github.io/data-models/fiware-terms.yaml#/source
    specialLocation:
      x-ngsi:
        type: Property
      type: array
      description: ' If the parking site is at a special location (airport, depatment store, etc.) it conveys what is such special location.'
      items:
        type: string
        enum:
          - airportTerminal
          - exhibitonCentre
          - shoppingCentre
          - specificFacility
          - trainStation
          - campground
          - themePark
          - ferryTerminal
          - vehicleOnRailTerminal
          - coachStation
          - cableCarStation
          - publicTransportStation
          - market
          - religiousCentre
          - conventionCentre
          - cinema
          - skilift
          - hotel
          - other
    status:
      x-ngsi:
        type: Property
      type: array
      description: 'Status of the parking site'
      items:
        type: string
        enum:
          - open
          - closed
          - closedAbnormal
          - openingTimesInForce
          - full
          - fullAtEntrance
          - spacesAvailable
          - almostFull
    totalSpotNumber:
      x-ngsi:
        type: Property
        model: 'https://schema.org/Integer'
      type: integer
      description: 'The total number of spots offered by this parking site. This number can be difficult to be obtained for those parking locations on which spots are not clearly marked by lines.'
      format: int32
    usageScenario:
      x-ngsi:
        type: Property
      type: array
      description: ' Usage scenario(s). Gives more details to the category attribute.'
      items:
        type: string
        enum:
          - truckParking
          - parkAndRide
          - parkAndCycle
          - parkAndWalk
          - kissAndRide
          - liftshare
          - carSharing
          - restArea
          - serviceArea
          - dropOffWithValet
          - dropOffMechanical
          - eventParking
          - automaticParkingGuidance
          - staffGuidesToSpace
          - vehicleLift
          - loadingBay
          - dropOff
          - overnightParking
          - other
